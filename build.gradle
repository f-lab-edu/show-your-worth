plugins {
	id 'java'
	id 'org.springframework.boot' version '2.6.15'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.texturized'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.7.1'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.7'
	implementation 'org.hibernate.validator:hibernate-validator:6.0.21.Final'
	implementation 'org.glassfish:jakarta.el:3.0.4'
	implementation 'com.google.guava:guava:32.1.1-jre'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation( 'org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.3.1'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'com.h2database:h2'
}

// 프로젝트 단위 변수 설정
ext {
	profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile
}

// 리소스 폴더 저장
sourceSets {
	main {
		resources {
			srcDirs "src/main/resources", "src/main/resources-env/${profile}"
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks {
	processResources {
		duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
	}
}

